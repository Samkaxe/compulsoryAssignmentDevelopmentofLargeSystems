version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - myapp-network
  
  seq-server:
    image: datalust/seq
    ports:
      - "5341:5341"
      - "5342:80"
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - seq-server-data:/data

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - myapp-network
    
  history-service:
    build:
      context: .
      dockerfile: HistoryService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;http://+:443
      - EASYNETQ_CONNECTION_STRING=host=rabbitmq;virtualHost=/;username=user;password=pass
    ports:
      - "6969:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - myapp-network
  
  addition-api:
    build:
      context: .
      dockerfile: AdditionAPI/Dockerfile 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;http://+:443
      - EASYNETQ_CONNECTION_STRING=host=rabbitmq;virtualHost=/;username=user;password=pass
    ports:
      - "7000:80" 
    depends_on:
      - rabbitmq
    networks:
      - myapp-network  
  
  subtraction-api:
    build:
      context: .
      dockerfile: SubtractionAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;http://+:443
      - EASYNETQ_CONNECTION_STRING=host=rabbitmq;virtualHost=/;username=user;password=pass
    ports:
      - "9000:80"
    depends_on:
      - rabbitmq
    networks:
      - myapp-network

  web-front:
    build:
      context: ./web-front
      dockerfile: Dockerfile
    container_name: web-next
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development

volumes:
  seq-server-data:
    
networks:
  myapp-network:
    name: myapp-network
    driver: bridge
